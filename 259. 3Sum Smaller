https://leetcode.com/problems/3sum-smaller/

解题重点：

Arrays.sort！！！

用一个loop i遍历所有的item

再用一个loop，通过i下一个和array最后一个的这两个指针找到符合要求的组合

注意： 这里可以跳过end指针之前的所有index并且全部加入结果， 因为array事先sort过了

class Solution {
    public int threeSumSmaller(int[] nums, int target) {
        Arrays.sort(nums);
        
        int count = 0;
        
        for(int start = 0; start < nums.length-2; start++) {
            int v1 = nums[start];
            
            count += helper(nums, target - v1, start+1, nums.length -1);
        }
        
        return count;
    }
    
    private int helper(int[] nums, int target, int start, int end) {
        int sum = 0;
        while(start < end) {
            if(nums[start] + nums[end] < target) {
                sum += end-start;
                start++;
            } else {
                end--;
            }
        }
        
        return sum;
    }
}

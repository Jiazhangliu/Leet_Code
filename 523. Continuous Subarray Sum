https://leetcode.com/problems/continuous-subarray-sum/

//一定记得处理k = 0的情况！

class Solution {
    public boolean checkSubarraySum(int[] nums, int k) {
        if(nums.length < 2) {
            return false;
        }
        
        int sum = 0;
        for(int i = 0; i < nums.length-1; i++) {
            sum = nums[i];
            for(int j = i+1; j < nums.length; j++) {
                sum += nums[j];
                if(k == 0) {
                    if(sum == 0) {
                        return true;
                    }
                } else if(sum % k == 0) {
                    return true;
                }
            }
        }
        
        return false;
    }
}

https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal/


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode bstFromPreorder(int[] preorder) {
        if(preorder == null || preorder.length == 0) {
            return null;
        }
        
        TreeNode root = new TreeNode(preorder[0]);
        
        for(int i = 1; i < preorder.length; i++) {
            insert(root, new TreeNode(preorder[i]));
        }
        
        return root;
    }
    
    private void insert(TreeNode root, TreeNode toBeInserted) {
        if(root.val < toBeInserted.val) {
            if(root.right == null) {
                root.right = toBeInserted;
            } else {
                insert(root.right, toBeInserted);
            }
        } else {
            if(root.left == null) {
                root.left = toBeInserted;
            } else {
                insert(root.left, toBeInserted);
            }
        }
    }
}

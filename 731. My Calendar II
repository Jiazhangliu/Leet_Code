https://leetcode.com/problems/my-calendar-ii/

解题思路：
用两个list来记录 一个是正常的放入，另一个记录overlap
第三次如果和overlap冲突了 证明之前已经有过冲突了，就可以return false了

其余情况只需要更新overlap 和 calendar就可以了


class MyCalendarTwo {

    List<int[]> calendar;
    List<int[]> overlap;
    
    public MyCalendarTwo() {
        calendar = new LinkedList<>();
        overlap = new LinkedList<>();
    }
    
    public boolean book(int start, int end) {
        for(int[] ol : overlap) {
            if(ol[0] < end && ol[1] > start) {
                return false;
            }
        }
        
        for(int[] cl : calendar) {
            if(end > cl[0] && start < cl[1]) {
                overlap.add(new int[]{Math.max(start, cl[0]), Math.min(end, cl[1])});
            }
        }
        calendar.add(new int[]{start, end});
        return true;
    }
}

/**
 * Your MyCalendarTwo object will be instantiated and called as such:
 * MyCalendarTwo obj = new MyCalendarTwo();
 * boolean param_1 = obj.book(start,end);
 */
